{
  "permissions": {
    "allow": [
      "Bash(python test:*)",
      "Bash(mv:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(tree:*)",
      "Bash(mkdir:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(start cmd /c \"python -m src.api.main\")",
      "Bash(sqlite3:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:api.icicidirect.com)",
      "Bash(del app.py main_data_fetcher.py run_api.bat run_app.bat USAGE_GUIDE.md)",
      "Bash(rm:*)",
      "Bash(cmd /c \"move *.py archive\\old_root_files\\ 2>nul\")",
      "Bash(timeout:*)",
      "Bash(start cmd /k:*)",
      "Bash(start /B python:*)",
      "Bash(wmic process where processid=33168 delete:*)",
      "Bash(wmic process where processid=1784 delete:*)",
      "Bash(wmic process where processid=8500 delete:*)",
      "Bash(wmic process where processid=27160 delete:*)",
      "Bash(wmic process where processid=33592 delete:*)",
      "Bash(wmic:*)",
      "Bash(start_api_background.bat)",
      "Bash(cmd:*)",
      "Bash(cp:*)",
      "Bash(dir:*)",
      "Bash(set PYTHONPATH=.)",
      "Bash(del:*)",
      "Bash(move:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(start python run_backtest_api.py)",
      "Bash(grep:*)",
      "Bash(start /b python:*)",
      "Bash(sqlcmd:*)",
      "Bash(echo)",
      "Bash(stop_all_apis.bat)",
      "Bash(tasklist:*)",
      "Bash(start python unified_api_correct.py)",
      "Bash(pip search:*)",
      "Bash(rg:*)",
      "Bash(run_and_test_api.bat)",
      "Bash(cat:*)",
      "Bash(kill_api.bat)",
      "Bash(sc query:*)",
      "Bash(where sqlcmd)",
      "Bash(xcopy:*)",
      "Bash(copy unified_api_correct.py backup_20250805unified_api_correct.py)",
      "Bash(touch:*)",
      "Bash(git add:*)",
      "Bash(ren:*)",
      "Bash(start cmd /c:*)",
      "Bash(restart_and_test.bat)",
      "WebFetch(domain:generativelanguage.googleapis.com)",
      "Bash(where gemini)",
      "Bash(gemini:*)",
      "Bash(setup_gemini_cli.bat)",
      "Bash(setx:*)",
      "Bash(npm uninstall:*)",
      "Bash(start_api_and_test.bat)",
      "Bash(start ml_validation_form.html)",
      "Bash(start test_dashboard_fix.html)",
      "Bash(start auto_login_dashboard.html)",
      "Bash(start simple_login_test.html)",
      "Bash(download_chromedriver.bat)",
      "WebFetch(domain:support.zerodha.com)",
      "WebFetch(domain:tradewithpython.com)",
      "Bash(echo:*)",
      "Bash(start test_kite_dashboard.html)",
      "Bash(start scheduler_dashboard.html)",
      "Bash(pip show:*)",
      "Bash(start index.html)",
      "Bash(start status_test_dashboard.html)",
      "Bash(start positions.html)",
      "Bash(schtasks:*)",
      "Bash(start live_trading.html)",
      "WebFetch(domain:docs.algotest.in)",
      "Bash(start option_chain.html)",
      "Bash(for file in test_*.py check_*.py debug_*.py verify_*.py)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(fi)",
      "Bash(done)",
      "Bash(for file in *june*.py *timer*.py breeze_*.py kite_*.py)",
      "Bash(for file in calibrate_*.py monitor_*.py simple_api.py totp_api.py analyze_*.py cleanup_*.py demo_*.py fetch_*.py final_*.py get_*.py manual_*.py)",
      "Bash(for file in test_*.html *_backup.html *_v2.html *_v3.html demo.html websocket_test.html instant_*.html simple_*.html totp_authenticator.html trade_journey_multi.html index_modern.html index_simple.html)",
      "Bash(for file in *journey*.json *response*.json test_*.json *june*.json whatif*.json ml_response*.json option_test.json)",
      "Bash(for file in advanced_caching.py enhanced_*.py multiprocessing_optimization.py nifty_optimizations.py optimized_options_bulk.py ultimate_speed_config.py ultra_fast_async.py)",
      "Bash(start session.html)",
      "Bash(start http://localhost:8000/option_chain.html)",
      "Bash(start http://localhost:8000/index_hybrid.html)",
      "WebFetch(domain:docs.openalgo.in)",
      "Bash(git clone:*)",
      "Bash(npm init:*)",
      "Bash(npm run build-css-prod:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(npm ls:*)",
      "Bash(npm install:*)",
      "Bash(start dashboard_modern.html)",
      "Bash(start http://localhost:8000/dashboard_modern.html)",
      "Bash(start http://localhost:8000/test_modern_dashboard.html)",
      "Bash(start http://localhost:8000/smart_orders_demo.html)",
      "Bash(for page in paper_trading.html signals.html ml_validation_form.html data_collection.html settings.html)",
      "Bash(do echo -n \"$page: \")",
      "Bash(for file in positions.html backtest.html paper_trading.html strategy_builder.html main_dashboard.html)",
      "Bash(then sed -i 's|<link rel=\"\"stylesheet\"\" href=\"\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome|<script src=\"\"static/components/demo_mode_indicator.js\"\"></script>\\n    <link rel=\"\"stylesheet\"\" href=\"\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome|' \"$file\")",
      "Bash(for file in backtest.html positions.html option_chain.html live_trading.html)",
      "Bash(do sed -i \"s|.*demo_mode_indicator.js.*||g\" $file)",
      "Bash(if exist staticcomponentsdemo_mode_indicator.js del staticcomponentsdemo_mode_indicator.js)",
      "Bash(copy openalgo_panel_clean.html openalgo_panel.html)",
      "Bash(start trade_journal_dashboard.html)",
      "Bash(start integrated_trading_dashboard.html)",
      "Bash(start monitoring_dashboard.html)",
      "Bash(scriptssmoke_test.bat)",
      "Bash(start http://localhost:8000/live_trading.html)",
      "WebSearch",
      "Bash(start http://localhost:8000/auto_login_dashboard.html)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install pyjwt)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install pyjwt passlib python-multipart)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/python.exe unified_api_correct.py)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install argon2-cffi)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install pyzmq)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install python-jose[cryptography])",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/pip.exe install psutil)",
      "Bash(start http://localhost:8000/live_trading_pro.html)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/python.exe test_websocket_simple.py)",
      "Bash(start C:UsersE1791Kitepybreezepythontest_websocket.html)",
      "Bash(start test_websocket.html)",
      "Bash(start margin_calculator.html)",
      "Bash(start live_trading_pro_modern.html)",
      "Bash(start http://localhost:8000/live_trading_pro_complete.html)",
      "Bash(start http://localhost:8000/strategy_builder.html)",
      "Bash(start http://localhost:8000/test_strategy_builder.html)",
      "Bash(if [ -f \"kite_auth_token.json\" ])",
      "Bash(else echo \"File does not exist\")",
      "Bash(start strategy_builder.html)",
      "Read(/C:\\Users\\E1791\\.claude/**)",
      "Bash(start http://localhost:8000/main_dashboard.html)",
      "Bash(if exist openalgo_panel.html del openalgo_panel.html)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/python.exe test_breeze_quotes.py)",
      "Bash(C:/Users/E1791/Kitepy/breezepython/.venv/Scripts/python.exe test_option_response.py)",
      "Bash(start http://localhost:8000/dashboard_pro.html)",
      "Bash(start http://localhost:8000/test_data_api.html)",
      "Bash(start http://localhost:8000/data_management.html)",
      "Bash(start http://localhost:8000/data_debug.html)",
      "Bash(start http://localhost:8000/test_strategy_flow.html)",
      "Bash(start http://localhost:8000/data_management_fixed.html)",
      "Bash(start http://localhost:8000/strategy_builder_fixed.html)",
      "Bash(start http://localhost:8000/data_management_complete.html)",
      "Bash(start http://localhost:8000/test_live_price.html)",
      "Bash(for i in 1 2 3 4 5)",
      "Bash(break)",
      "WebFetch(domain:www.tradingview.com)",
      "Bash(git checkout:*)",
      "Bash(for dir in archive/*/)",
      "Bash(start http://localhost:8000/data_collection.html)",
      "Bash(start http://localhost:8000/test_strategy_debug.html)",
      "Bash(start http://localhost:8000/strategy_test_minimal.html)",
      "Bash(start http://localhost:8000/paper_trading.html)",
      "Bash(start data_collection.html)",
      "Bash(start http://localhost:8000/strategy_builder_simple.html)",
      "Bash(start http://localhost:8000/positions.html)",
      "Bash(copy index_hybrid.html index_hybrid_backup.html)",
      "Bash(start index_hybrid.html)",
      "Bash(start http://localhost:8000/signals.html)"
    ],
    "deny": []
  }
}